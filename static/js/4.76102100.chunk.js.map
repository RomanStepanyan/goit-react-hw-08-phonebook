{"version":3,"sources":["components/Navigation/ContactsNavigation.module.css","components/UserMenu/UserMenu.js","components/Navigation/ContactsNavigation.js","components/HomePage/HomePage.js","components/Navigation/LoginNavigationButtons.js","components/Navigation/NavigationBar.js","components/ContactsList/ContactsList.module.css","components/ContactsList/ContactsList.js"],"names":["module","exports","UserMenu","dispatch","useDispatch","name","useSelector","getUserName","classes","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","useStales","Toolbar","Box","className","Typography","variant","Button","color","onClick","logout","ContactsNavigation","to","exact","s","useStyles","HomePage","LoginNavigationButtons","root","homePageTitle","position","palette","common","black","marginTop","textAlign","NavigationBar","isLoggedOn","getIsLoggedOn","AppBar","Container","fixed","ContactsList","getVisibleContacts","items","filter","normalizedFilter","toLowerCase","contact","includes","connect","contacts","length","contactListWrapper","map","item","contact_span","number","button","deleteContacts","id"],"mappings":"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","file":"static/js/4.76102100.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactsNavigation_title__njOGd\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport { Toolbar, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { getUserName } from '../../Redux/Selectors';\nimport { logout } from '../../Redux/Operations';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(getUserName);\n\n  const useStales = makeStyles(theme => ({\n    menuButton: { marginRight: theme.spacing(1) },\n    title: { flexGrow: 1, marginRight: theme.spacing(1) },\n  }));\n\n  const classes = useStales();\n\n  return (\n    <Toolbar>\n      <Box className={classes.title}>\n        <Typography variant=\"h6\">Hello {name}</Typography>\n      </Box>\n      <Box className={classes.menuButton}>\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={() => dispatch(logout())}\n        >\n          Logout\n        </Button>\n      </Box>\n    </Toolbar>\n  );\n};\nexport default UserMenu;\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport s from './ContactsNavigation.module.css';\r\n\r\nconst useStales = makeStyles(theme => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    marginRight: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nconst ContactsNavigation = () => {\r\n  const classes = useStales();\r\n  return (\r\n    <>\r\n      <NavLink to=\"/contacts\" exact>\r\n        <Box className={classes.title}>\r\n          <Typography variant=\"h6\" color=\"secondary\" className={s.title}>\r\n            Add contacts\r\n          </Typography>\r\n        </Box>\r\n      </NavLink>\r\n      <NavLink to=\"/filterContacts\" exact>\r\n        <Box className={classes.title}>\r\n          <Typography variant=\"h6\" color=\"secondary\" className={s.title}>\r\n            Find contacts\r\n          </Typography>\r\n        </Box>\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsNavigation;\r\n","import { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: { flexGrow: 1 },\r\n}));\r\n\r\nconst HomePage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" className={classes.title}>\r\n        My phonebook\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\nexport default HomePage;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStales = makeStyles(theme => ({\r\n  menuButton: { marginRight: theme.spacing(1) },\r\n}));\r\n\r\nconst LoginNavigationButtons = () => {\r\n  const classes = useStales();\r\n  return (\r\n    <>\r\n      <NavLink to=\"/login\" exact>\r\n        <Box className={classes.menuButton}>\r\n          <Button color=\"secondary\" variant=\"outlined\">\r\n            Login\r\n          </Button>\r\n        </Box>\r\n      </NavLink>\r\n      <NavLink to=\"/register\" exact>\r\n        <Box className={classes.menuButton}>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Sign up\r\n          </Button>\r\n        </Box>\r\n      </NavLink>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginNavigationButtons;\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { AppBar, Container, Toolbar, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { getIsLoggedOn } from '../../Redux/Selectors';\r\nimport ContactsList from '../ContactsList/ContactsList';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport ContactsNav from './ContactsNavigation';\r\nimport HomePage from '../HomePage/HomePage';\r\nimport LoginNavigationButtons from './LoginNavigationButtons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: { flexGrow: 1 },\r\n  menuButton: { marginRight: theme.spacing(1) },\r\n  title: { flexGrow: 1 },\r\n  homePageTitle: {\r\n    position: 'relative',\r\n    color: theme.palette.common.black,\r\n    marginTop: theme.spacing(10),\r\n    textAlign: 'center',\r\n  },\r\n}));\r\n\r\nconst NavigationBar = () => {\r\n  const isLoggedOn = useSelector(getIsLoggedOn);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\">\r\n        <Container fixed>\r\n          <Toolbar>\r\n            <HomePage />\r\n            {isLoggedOn ? (\r\n              <>\r\n                <ContactsNav />\r\n                <UserMenu />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <LoginNavigationButtons />\r\n              </>\r\n            )}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n      <Container fixed>\r\n        {isLoggedOn ? (\r\n          <ContactsList />\r\n        ) : (\r\n          <Typography variant=\"h6\" className={classes.homePageTitle}>\r\n            Please sign up or login to manage your contacts!\r\n          </Typography>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default NavigationBar;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsList_contact__1D6B_\",\"contact_span\":\"ContactsList_contact_span__1BvaR\",\"contactListWrapper\":\"ContactsList_contactListWrapper__21omI\",\"title\":\"ContactsList_title__14zUt\"};","import { connect, useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../Redux/Operations';\nimport { getIsLoggedOn } from '../../Redux/Selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ items }) => {\n  const dispatch = useDispatch();\n  const isLoggedOn = useSelector(getIsLoggedOn);\n\n  if (items.length === 0) return null;\n  return (\n    <>\n      {isLoggedOn ? (\n        <div className={s.contactListWrapper}>\n          <h2 className={s.title}>Contacts list</h2>\n          <ul>\n            {items.map(item => (\n              <li key={item.id} className={s.contact}>\n                <span className={s.contact_span}>{item.name}</span>{' '}\n                <span className={s.contact_span}>{item.number}</span>\n                <button\n                  className={s.button}\n                  onClick={() => dispatch(deleteContacts(item.id))}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  items: getVisibleContacts(items, filter),\n});\n\nexport default connect(mapStateToProps)(ContactsList);\n\nContactsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n"],"sourceRoot":""}