{"version":3,"sources":["Redux/UserSlice.js","Redux/Actions.js","Redux/Selectors.js","Redux/AxiosInstance.js","Redux/Operations.js","Redux/Reducers.js","Redux/Store.js","App.js","reportWebVitals.js","index.js"],"names":["createSlice","name","initialState","email","token","isLoggedOn","isLoading","error","reducers","onSignUpRequest","state","onSignUpSuccess","payload","user","onSignUpFailure","message","onLoginRequest","onLoginSuccess","onLoginFailure","onLogoutRequest","onLogoutSuccess","onLogoutFailure","onGetUser","actions","reducer","onLogout","console","log","onChange","createAction","text","number","getContactsRequest","getContactsSuccess","getContactsFailure","addContactsRequest","addContactsSuccess","addContactsFailure","deleteContactsRequest","deleteContactsSuccess","deleteContactsFailure","notValidatedName","contacts","items","find","item","getIsLoggedOn","getUserName","axiosInstance","axios","create","baseURL","interceptors","request","use","config","localStorage","getItem","headers","Authorization","getContacts","dispatch","getState","get","then","data","catch","addContacts","post","deleteContacts","id","delete","signUp","setItem","login","logout","removeItem","INITIAL_STATE","createReducer","GET_CONTACTS_FAILURE","ADD_CONTACTS_FAILURE","_","GET_CONTACTS_REQUEST","GET_CONTACTS_SUCCESS","ADD_CONTACT_SUCCESS","DELETE_CONTACTS_SUCCESS","filter","FILTER_CONTACT","combineReducers","userReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","whitelist","rootReducer","contactsReduсer","persistedReducer","persistReducer","store","configureStore","devTools","process","persistor","persistStore","ContactsList","lazy","FilterContacts","UserLogin","UserRegister","PrivatRoute","PublicRoute","NavigationBar","ContactForm","App","useSelector","useDispatch","useEffect","fallback","path","exact","restricted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b9058f75.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  name: '',\n  email: '',\n  token: '',\n  isLoggedOn: false,\n  isLoading: false,\n  error: '',\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    onSignUpRequest: state => {\n      state.isLoading = true;\n    },\n\n    onSignUpSuccess: (state, { payload }) => {\n      state.name = payload.user.name;\n      state.email = payload.user.email;\n      state.token = payload.token;\n      state.isLoggedOn = true;\n    },\n    onSignUpFailure: (state, { payload }) => {\n      state.error = payload.message;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n\n    onLoginRequest: state => {\n      state.isLoading = true;\n    },\n\n    onLoginSuccess: (state, { payload }) => {\n      state.name = payload.user.name;\n      state.email = payload.user.email;\n      state.token = payload.token;\n      state.isLoggedOn = true;\n      state.isLoading = false;\n    },\n\n    onLoginFailure: (state, { payload }) => {\n      state.error = payload.message;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n\n    onLogoutRequest: state => {\n      state.isLoading = true;\n    },\n\n    onLogoutSuccess: (state, { payload }) => {\n      state.name = '';\n      state.email = '';\n      state.token = '';\n      state.isLoading = false;\n      state.isLoggedOn = false;\n    },\n\n    onLogoutFailure: (state, { payload }) => {\n      state.error = payload.message;\n      state.isLoading = false;\n    },\n\n    onGetUser: (state, { payload }) => {\n      state.name = payload.user.name;\n      state.email = payload.user.email;\n      state.isLoggedOn = true;\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const {\n  onSignUpRequest,\n  onSignUpSuccess,\n  onSignUpFailure,\n  onLogout,\n  onGetUser,\n  onLoginRequest,\n  onLoginSuccess,\n  onLoginFailure,\n  onLogoutRequest,\n  onLogoutSuccess,\n  onLogoutFailure,\n} = actions;\nconsole.log(actions);\nexport default reducer;\n","import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuid } from 'uuid';\n\nexport const onAdd = createAction('ADD_CONTACT', text => ({\n  payload: {\n    name: text.name,\n    number: text.number,\n  },\n}));\nexport const deleteContacts = createAction('DELETE_CONTACT');\nexport const onChange = createAction('FILTER_CONTACT');\n\nexport const getContactsRequest = createAction('GET_CONTACTS_REQUEST');\nexport const getContactsSuccess = createAction('GET_CONTACTS_SUCCESS');\nexport const getContactsFailure = createAction('GET_CONTACTS_FAILURE');\n\nexport const addContactsRequest = createAction('ADD_CONTACTS_REQUEST');\nexport const addContactsSuccess = createAction('ADD_CONTACTS_SUCCESS');\nexport const addContactsFailure = createAction('ADD_CONTACTS_FAILURE');\n\nexport const deleteContactsRequest = createAction('DELETE_CONTACTS_REQUEST');\nexport const deleteContactsSuccess = createAction('DELETE_CONTACTS_SUCCESS');\nexport const deleteContactsFailure = createAction('DELETE_CONTACTS_FAILURE');\n","export const notValidatedName = state => name =>\n  state.contacts.items?.find(item => item.name === name);\n\nexport const getIsLoggedOn = state => state.user.isLoggedOn;\nexport const getUserName = state => state.user.name;\nexport const getToken = state => state.user.token;\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://connections-api.herokuapp.com',\r\n});\r\naxiosInstance.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  config.headers.Authorization = token ? `Bearer ${token}` : '';\r\n  return config;\r\n});\r\nexport default axiosInstance;\r\n","import axiosInstance from './AxiosInstance';\n\nimport * as actions from './Actions';\nimport {\n  onSignUpRequest,\n  onSignUpSuccess,\n  onSignUpFailure,\n  onLoginSuccess,\n  onLoginRequest,\n  onLoginFailure,\n  onLogoutRequest,\n  onLogoutSuccess,\n  onLogoutFailure,\n} from './UserSlice';\n\nexport const getContacts = () => (dispatch, getState) => {\n  dispatch(actions.getContactsRequest());\n  axiosInstance\n    .get('/contacts')\n    .then(({ data }) => {\n      dispatch(actions.getContactsSuccess(data));\n    })\n    .catch(error => dispatch(actions.getContactsFailure(error.message)));\n};\n\nexport const addContacts = payload => (dispatch, getState) => {\n  dispatch(actions.addContactsRequest());\n  axiosInstance\n    .post('/contacts', payload)\n    .then(({ data }) => {\n      dispatch(actions.addContactsSuccess(data));\n    })\n    .catch(error => dispatch(actions.addContactsFailure(error.message)));\n};\n\nexport const deleteContacts = id => (dispatch, getState) => {\n  dispatch(actions.deleteContactsRequest());\n  axiosInstance\n    .delete(`/contacts/${id}`)\n    .then(() => {\n      dispatch(actions.deleteContactsSuccess(id));\n    })\n    .catch(error => dispatch(actions.deleteContactsFailure(error.message)));\n};\n\nexport const signUp = payload => (dispatch, getState) => {\n  dispatch(onSignUpRequest());\n  axiosInstance\n    .post('/users/signup', payload)\n    .then(({ data }) => {\n      localStorage.setItem('token', data.token);\n      dispatch(onSignUpSuccess(data));\n    })\n    .catch(error => {\n      dispatch(onSignUpFailure(error.message));\n    });\n};\n\nexport const login = payload => (dispatch, getState) => {\n  dispatch(onLoginRequest());\n  axiosInstance\n    .post('/users/login', payload)\n    .then(({ data }) => {\n      localStorage.setItem('token', data.token);\n      dispatch(onLoginSuccess(data));\n    })\n    .catch(error => {\n      dispatch(onLoginFailure(error.message));\n    });\n};\n\nexport const logout = payload => (dispatch, getState) => {\n  dispatch(onLogoutRequest());\n  axiosInstance\n    .post('/users/logout', payload)\n    .then(() => {\n      localStorage.removeItem('token');\n      dispatch(onLogoutSuccess());\n    })\n    .catch(error => dispatch(onLogoutFailure(error.message)));\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst INITIAL_STATE = {\n  isLoading: false,\n  items: [],\n  error: '',\n};\n\nconst error = createReducer(INITIAL_STATE.error, {\n  GET_CONTACTS_FAILURE: (state, { payload }) => {\n    return payload;\n  },\n  ADD_CONTACTS_FAILURE: (_, { payload }) => {\n    return payload;\n  },\n});\n\nconst isLoading = createReducer(INITIAL_STATE.isLoading, {\n  GET_CONTACTS_REQUEST: () => {\n    return true;\n  },\n  GET_CONTACTS_SUCCESS: () => {\n    return false;\n  },\n  GET_CONTACTS_FAILURE: () => {\n    return false;\n  },\n});\n\nconst items = createReducer(INITIAL_STATE.items, {\n  GET_CONTACTS_SUCCESS: (_, { payload }) => {\n    return payload;\n  },\n  ADD_CONTACT_SUCCESS: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  DELETE_CONTACTS_SUCCESS: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nconst filter = createReducer('', {\n  FILTER_CONTACT: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  isLoading,\n  items,\n  filter,\n  error,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReduсer from './Reducers';\nimport userReducer from './UserSlice';\n\nconsole.log(userReducer.state);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'user',\n  storage,\n  whitelist: ['token'],\n\n  // key: 'contacts',\n  // storage,\n  // blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsReduсer,\n  user: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { Switch } from 'react-router-dom';\n\nimport { getIsLoggedOn } from './Redux/Selectors';\nimport { getContacts } from './Redux/Operations';\n\nconst ContactsList = lazy(() =>\n  import('./components/ContactsList/ContactsList'),\n);\nconst FilterContacts = lazy(() =>\n  import('./components/FilterContacts/FilterContacts'),\n);\nconst UserLogin = lazy(() => import('./components/User/User'));\nconst UserRegister = lazy(() => import('./components/Register/Register'));\nconst PrivatRoute = lazy(() => import('./components/Routes/PrivatRoute'));\nconst PublicRoute = lazy(() => import('./components/Routes/PublicRoute'));\nconst NavigationBar = lazy(() =>\n  import('./components/Navigation/NavigationBar'),\n);\nconst ContactForm = lazy(() => import('./components/ContactForm/ContactForm'));\n\nexport const App = () => {\n  const isLoggedOn = useSelector(getIsLoggedOn);\n  console.log(isLoggedOn);\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(getContacts()));\n\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        <NavigationBar />\n        <Switch>\n          <PublicRoute path=\"/\" exact>\n            <NavigationBar />\n          </PublicRoute>\n          <PublicRoute path=\"/login\" exact restricted>\n            <UserLogin />\n          </PublicRoute>\n          <PublicRoute path=\"/register\" restricted>\n            <UserRegister />\n          </PublicRoute>\n          <PrivatRoute path=\"/contacts\">\n            <ContactForm />\n          </PrivatRoute>\n          <PrivatRoute path=\"/contactsList\">\n            <ContactsList />\n          </PrivatRoute>\n          <PrivatRoute path=\"/filterContacts\">\n            <FilterContacts />\n          </PrivatRoute>\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/Store';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}