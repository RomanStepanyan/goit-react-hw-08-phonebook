{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactsList/ContactsList.js"],"names":["module","exports","getVisibleContacts","items","filter","normalizedFilter","toLowerCase","contact","name","includes","connect","contacts","dispatch","useDispatch","isLoggedOn","useSelector","getIsLoggedOn","length","className","s","contactListWrapper","title","map","item","contact_span","number","button","onClick","deleteContacts","id"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,aAAe,mCAAmC,mBAAqB,yCAAyC,MAAQ,8B,2FCoC5KC,EAAqB,SAACC,EAAOC,GACjC,IAAMC,EAAmBD,EAAOE,cAChC,OAAOH,EAAMC,QAAO,SAAAG,GAAO,OACzBA,EAAQC,KAAKF,cAAcG,SAASJ,OAQzBK,uBAJS,SAAC,GAAD,QAAGC,SAAYR,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5DD,MAAOD,EAAmBC,EAAOC,MAGpBM,EAzCM,SAAC,GAAe,IAAbP,EAAY,EAAZA,MAChBS,EAAWC,cACXC,EAAaC,YAAYC,KAE/B,OAAqB,IAAjBb,EAAMc,OAAqB,KAE7B,mCACGH,EACC,sBAAKI,UAAWC,IAAEC,mBAAlB,UACE,oBAAIF,UAAWC,IAAEE,MAAjB,2BACA,6BACGlB,EAAMmB,KAAI,SAAAC,GAAI,OACb,qBAAkBL,UAAWC,IAAEZ,QAA/B,UACE,sBAAMW,UAAWC,IAAEK,aAAnB,SAAkCD,EAAKf,OAAa,IACpD,sBAAMU,UAAWC,IAAEK,aAAnB,SAAkCD,EAAKE,SACvC,wBACEP,UAAWC,IAAEO,OACbC,QAAS,kBAAMf,EAASgB,YAAeL,EAAKM,MAF9C,sBAHON,EAAKM,YAalB","file":"static/js/10.c70b1057.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsList_contact__1D6B_\",\"contact_span\":\"ContactsList_contact_span__1BvaR\",\"contactListWrapper\":\"ContactsList_contactListWrapper__21omI\",\"title\":\"ContactsList_title__14zUt\"};","import { connect, useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from '../../Redux/Operations';\nimport { getIsLoggedOn } from '../../Redux/Selectors';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ items }) => {\n  const dispatch = useDispatch();\n  const isLoggedOn = useSelector(getIsLoggedOn);\n\n  if (items.length === 0) return null;\n  return (\n    <>\n      {isLoggedOn ? (\n        <div className={s.contactListWrapper}>\n          <h2 className={s.title}>Contacts list</h2>\n          <ul>\n            {items.map(item => (\n              <li key={item.id} className={s.contact}>\n                <span className={s.contact_span}>{item.name}</span>{' '}\n                <span className={s.contact_span}>{item.number}</span>\n                <button\n                  className={s.button}\n                  onClick={() => dispatch(deleteContacts(item.id))}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  items: getVisibleContacts(items, filter),\n});\n\nexport default connect(mapStateToProps)(ContactsList);\n\nContactsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n"],"sourceRoot":""}