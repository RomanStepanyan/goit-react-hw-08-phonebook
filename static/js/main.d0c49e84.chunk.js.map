{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.module.css","components/FilterContacts/FilterContacts.module.css","App.module.css","components/User/User.module.css","Redux/Reducers.js","Redux/UserSlice.js","Redux/Store.js","Redux/Actions.js","Redux/Operations.js","Redux/Selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.js","components/User/User.js","components/Register/Register.js","components/UserMenu/UserMenu.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","INITIAL_STATE","error","createReducer","GET_CONTACTS_FAILURE","state","payload","ADD_CONTACTS_FAILURE","_","isLoading","GET_CONTACTS_REQUEST","GET_CONTACTS_SUCCESS","items","ADD_CONTACT_SUCCESS","DELETE_CONTACTS_SUCCESS","filter","id","FILTER_CONTACT","combineReducers","createSlice","name","initialState","email","token","isLoggedOn","reducers","onSignUpRequest","onSignUpSuccess","user","onSignUpFailure","message","onLoginRequest","onLoginSuccess","onLoginFailure","onLogoutRequest","onLogoutSuccess","onLogoutFailure","onGetUser","actions","reducer","onLogout","console","log","userReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contacts","contactsRedu—Åer","persistedReducer","persistReducer","store","configureStore","devTools","process","persistor","persistStore","onChange","createAction","text","number","getContactsRequest","getContactsSuccess","getContactsFailure","addContactsRequest","addContactsSuccess","addContactsFailure","deleteContactsRequest","deleteContactsSuccess","deleteContactsFailure","axios","defaults","headers","common","Authorization","getContacts","dispatch","getState","get","then","data","catch","notValidatedName","find","item","getIsLoggedOn","getUserName","connect","useDispatch","useState","setName","setNumber","getItem","useSelector","className","s","title","form","onSubmit","event","preventDefault","alert","post","type","pattern","required","placeholder","value","target","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","onRemove","length","map","contact_span","button","onClick","delete","input","UserLogin","setEmail","password","setPassword","onLoading","e","label","UserRegister","UserMenu","App","useEffect","container","User","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d0c49e84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsList_contact__1D6B_\",\"contact_span\":\"ContactsList_contact_span__1BvaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__8H6s0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FilterContacts_input__Pii4G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Rvcc2\",\"title\":\"App_title__1lB4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"User_form__23hEo\",\"label\":\"User_label__3n0Q_\",\"button\":\"User_button__3TYLM\",\"title\":\"User_title__3a1xo\"};","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst INITIAL_STATE = {\n  isLoading: false,\n  items: [],\n  error: '',\n};\n\nconst error = createReducer(INITIAL_STATE.error, {\n  GET_CONTACTS_FAILURE: (state, { payload }) => {\n    return payload;\n  },\n  ADD_CONTACTS_FAILURE: (_, { payload }) => {\n    return payload;\n  },\n});\n\nconst isLoading = createReducer(INITIAL_STATE.isLoading, {\n  GET_CONTACTS_REQUEST: () => {\n    return true;\n  },\n  GET_CONTACTS_SUCCESS: () => {\n    return false;\n  },\n  GET_CONTACTS_FAILURE: () => {\n    return false;\n  },\n});\n\nconst items = createReducer(INITIAL_STATE.items, {\n  GET_CONTACTS_SUCCESS: (_, { payload }) => {\n    return payload;\n  },\n  ADD_CONTACT_SUCCESS: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  DELETE_CONTACTS_SUCCESS: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nconst filter = createReducer('', {\n  FILTER_CONTACT: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  isLoading,\n  items,\n  filter,\n  error,\n});\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  name: '',\n  email: '',\n  token: '',\n  isLoggedOn: false,\n  isLoading: false,\n  error: '',\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    onSignUpRequest: state => {\n      state.isLoading = true;\n    },\n\n    onSignUpSuccess: (state, { payload }) => {\n      state.name = payload.user.name;\n      state.email = payload.user.email;\n      state.token = payload.token;\n      state.isLoggedOn = true;\n    },\n    onSignUpFailure: (state, { payload }) => {\n      state.error = payload.message;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n\n    onLoginRequest: state => {\n      state.isLoading = true;\n    },\n\n    onLoginSuccess: (state, { payload }) => {\n      state.name = payload.user.name;\n      state.email = payload.user.email;\n      state.token = payload.token;\n      state.isLoggedOn = true;\n      state.isLoading = false;\n    },\n\n    onLoginFailure: (state, { payload }) => {\n      state.error = payload.message;\n      state.isLoggedOn = false;\n      state.isLoading = false;\n    },\n\n    onLogoutRequest: state => {\n      state.isLoading = true;\n    },\n\n    onLogoutSuccess: (state, { payload }) => {\n      state.name = '';\n      state.email = '';\n      state.token = '';\n      state.isLoading = false;\n      state.isLoggedOn = false;\n    },\n\n    onLogoutFailure: (state, { payload }) => {\n      state.error = payload.message;\n      state.isLoading = false;\n    },\n\n    onGetUser: (state, { payload }) => {\n      state.name = payload.user.name;\n      state.email = payload.user.email;\n      state.isLoggedOn = true;\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const {\n  onSignUpRequest,\n  onSignUpSuccess,\n  onSignUpFailure,\n  onLogout,\n  onGetUser,\n  onLoginRequest,\n  onLoginSuccess,\n  onLoginFailure,\n  onLogoutRequest,\n  onLogoutSuccess,\n  onLogoutFailure,\n} = actions;\nconsole.log(actions);\nexport default reducer;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsRedu—Åer from './Reducers';\nimport userReducer from './UserSlice';\n\nconsole.log(userReducer.state);\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactsRedu—Åer,\n  user: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// const store = createStore(\n//   rootRedu—Åer,\n// );\n\nexport const persistor = persistStore(store);\n","import { createAction } from '@reduxjs/toolkit';\n// import { v4 as uuid } from 'uuid';\n\nexport const onAdd = createAction('ADD_CONTACT', text => ({\n  payload: {\n    // id: uuid(),\n    name: text.name,\n    number: text.number,\n  },\n}));\nexport const deleteContacts = createAction('DELETE_CONTACT');\nexport const onChange = createAction('FILTER_CONTACT');\n\nexport const getContactsRequest = createAction('GET_CONTACTS_REQUEST');\nexport const getContactsSuccess = createAction('GET_CONTACTS_SUCCESS');\nexport const getContactsFailure = createAction('GET_CONTACTS_FAILURE');\n\nexport const addContactsRequest = createAction('ADD_CONTACTS_REQUEST');\nexport const addContactsSuccess = createAction('ADD_CONTACTS_SUCCESS');\nexport const addContactsFailure = createAction('ADD_CONTACTS_FAILURE');\n\nexport const deleteContactsRequest = createAction('DELETE_CONTACTS_REQUEST');\nexport const deleteContactsSuccess = createAction('DELETE_CONTACTS_SUCCESS');\nexport const deleteContactsFailure = createAction('DELETE_CONTACTS_FAILURE');\n\n// export const onLoginRequest = createAction('ON_LOGIN_REQUEST');\n// export const onLoginSuccess = createAction('ON_LOGIN_SUCCESS');\n// export const onLoginFailure = createAction('ON_LOGIN_FAILURE');\n","import axios from 'axios';\nimport * as actions from './Actions';\nimport {\n  onSignUpRequest,\n  onSignUpSuccess,\n  onSignUpFailure,\n  onLoginSuccess,\n  onGetUser,\n  onLoginRequest,\n  onLoginFailure,\n  onLogoutRequest,\n  onLogoutSuccess,\n  onLogoutFailure,\n} from './UserSlice';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const getContacts = () => (dispatch, getState) => {\n  dispatch(actions.getContactsRequest());\n  axios\n    .get('https://connections-api.herokuapp.com/contacts')\n    .then(({ data }) => {\n      token.set(data.token);\n      console.log(data);\n\n      dispatch(actions.getContactsSuccess(data));\n    })\n\n    .catch(error => dispatch(actions.getContactsFailure(error.message)));\n};\n\nexport const addContacts = payload => (dispatch, getState) => {\n  dispatch(actions.addContactsRequest());\n  axios\n    .post('https://connections-api.herokuapp.com/contacts', payload)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(actions.addContactsSuccess(data));\n    })\n    .catch(error => dispatch(actions.addContactsFailure(error.message)));\n};\n\nexport const deleteContacts = id => (dispatch, getState) => {\n  dispatch(actions.deleteContactsRequest());\n  axios\n    .delete(`https://connections-api.herokuapp.com/contacts/${id}`)\n    .then(() => {\n      // token.set(data.token);\n      dispatch(actions.deleteContactsSuccess(id));\n    })\n    .catch(error => dispatch(actions.deleteContactsFailure(error.message)));\n};\n\nexport const signUp = payload => (dispatch, getState) => {\n  dispatch(onSignUpRequest());\n  axios\n    .post('https://connections-api.herokuapp.com/users/signup', payload)\n    .then(({ data }) => {\n      token.set(data.token);\n      dispatch(onSignUpSuccess(data));\n    })\n    .catch(error => {\n      console.log(error.message);\n      dispatch(onSignUpFailure(error.message));\n    });\n};\n\nexport const login = payload => (dispatch, getState) => {\n  dispatch(onLoginRequest());\n  axios\n    .post('https://connections-api.herokuapp.com/users/login', payload)\n    .then(({ data }) => {\n      dispatch(onLoginSuccess(data));\n      token.set(data.token);\n    })\n    .catch(error => {\n      console.log(error.message);\n      dispatch(onLoginFailure(error.message));\n    });\n};\n\nexport const logout = payload => (dispatch, getState) => {\n  dispatch(onLogoutRequest());\n  axios\n    .post('https://connections-api.herokuapp.com/users/logout', payload)\n    .then(() => {\n      // token.set(data.token);\n      dispatch(onLogoutSuccess());\n      token.unset();\n    })\n    .catch(error => dispatch(onLogoutFailure(error.message)));\n};\n","export const notValidatedName = state => name =>\n  state.contacts.items?.find(item => item.name === name);\n\nexport const getIsLoggedOn = state => state.user.isLoggedOn;\nexport const getUserName = state => state.user.name;\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { addContacts, getContacts } from '../../Redux/Operations';\nimport { notValidatedName } from '../../Redux/Selectors';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  // dispatch(getContacts());\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeNameForm = ({ target }) => {\n    setName(target.value);\n  };\n\n  const handleChangeNumberForm = ({ target }) => {\n    setNumber(target.value);\n  };\n\n  const getItem = useSelector(notValidatedName);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    if (getItem(name)) {\n      alert('Contact is already exist');\n      return null;\n    } else {\n      dispatch(addContacts({ name, number }));\n      dispatch(getContacts());\n    }\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <div>\n      <h2 className={s.title}>Contact form</h2>\n      <form className={s.form} onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n          title=\"–ò–º—è –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤, –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞, —Ç–∏—Ä–µ –∏ –ø—Ä–æ–±–µ–ª–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan –∏ —Ç. –ø.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeNameForm}\n        />\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 11-12 —Ü–∏—Ñ—Ä –∏ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã, —Ç–∏—Ä–µ, –ø—É–∑–∞—Ç—ã–µ —Å–∫–æ–±–∫–∏ –∏ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChangeNumberForm}\n        />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(ContactForm);\n","import { connect, useDispatch } from 'react-redux';\n// import { onRemove } from '../../Redux/Actions';\nimport { deleteContacts } from '../../Redux/Operations';\n\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\n// const ContactsListItem = ({ id, name, phone, onRemove }) => {\n//   return (\n//     <li className={s.contact}>\n//       {name}: {phone} <button onClick={() => onRemove(id)}>Delete</button>\n//     </li>\n//   );\n// };\n\nconst ContactsList = ({ items, onRemove }) => {\n  const dispatch = useDispatch();\n\n  if (items.length === 0) return null;\n  return (\n    <div>\n      <h2 className={s.title}>Contact list</h2>\n      <ul>\n        {items.map(item => (\n          <li key={item.id} className={s.contact}>\n            <span className={s.contact_span}>{item.name}</span>{' '}\n            <span className={s.contact_span}>{item.number}</span>\n            <button\n              className={s.button}\n              onClick={() => dispatch(deleteContacts(item.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  items: getVisibleContacts(items, filter),\n});\n\nexport default connect(mapStateToProps)(ContactsList);\n\nContactsList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n","import { connect } from 'react-redux';\nimport { onChange } from '../../Redux/Actions';\nimport PropTypes from 'prop-types';\nimport s from './FilterContacts.module.css';\n\nconst FilterContacts = ({ filter, onChange }) => {\n  return (\n    <input\n      className={s.input}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={onChange}\n      // onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Search contact\"\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: ({ target }) => dispatch(onChange(target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterContacts);\n\nFilterContacts.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { login } from '../../Redux/Operations';\nimport s from './User.module.css';\n\nconst UserLogin = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const onLoading = useSelector(state => state.user.isLoading);\n  console.log(onLoading);\n\n  const handleChangeEmail = ({ target }) => setEmail(target.value);\n  const handleChangePassword = ({ target }) => setPassword(target.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2 className={s.title}>Please login</h2>\n      <form type=\"submit\" className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          <span>email</span>\n          <input\n            type=\"email\"\n            className={s.input}\n            placeholder=\"Input your email\"\n            value={email}\n            onChange={handleChangeEmail}\n          />\n        </label>\n        <label className={s.label}>\n          <span>password</span>\n          <input\n            type=\"password\"\n            className={s.input}\n            placeholder=\"Input your password\"\n            value={password}\n            onChange={handleChangePassword}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default UserLogin;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signUp } from '../../Redux/Operations';\nimport s from '../User/User.module.css';\n\nconst UserRegister = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChangeName = ({ target }) => setName(target.value);\n  const handleChangeEmail = ({ target }) => setEmail(target.value);\n  const handleChangePassword = ({ target }) => setPassword(target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signUp({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2 className={s.title}>Please sign up</h2>\n      <form type=\"submit\" className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          <span>name</span>\n          <input\n            type=\"text\"\n            className={s.input}\n            placeholder=\"Input your name\"\n            value={name}\n            onChange={handleChangeName}\n          />\n        </label>\n        <label className={s.label}>\n          <span>email</span>\n          <input\n            type=\"email\"\n            className={s.input}\n            placeholder=\"Input your email\"\n            value={email}\n            onChange={handleChangeEmail}\n          />\n        </label>\n        <label className={s.label}>\n          <span>password</span>\n          <input\n            type=\"password\"\n            className={s.input}\n            placeholder=\"Input your password\"\n            value={password}\n            onChange={handleChangePassword}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Sign up\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default UserRegister;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getUserName } from '../../Redux/Selectors';\nimport { logout } from '../../Redux/Operations';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n  const name = useSelector(getUserName);\n\n  return (\n    <div>\n      <span>Hello {name}</span>\n      <button type=\"button\" onClick={() => dispatch(logout())}>\n        Logout\n      </button>\n    </div>\n  );\n};\nexport default UserMenu;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getContacts } from './Redux/Operations';\nimport { getIsLoggedOn } from './Redux/Selectors';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport FilterContacts from './components/FilterContacts/FilterContacts';\nimport UserLogin from './components/User/User';\nimport UserRegister from './components/Register/Register';\nimport UserMenu from './components/UserMenu/UserMenu';\nimport s from './App.module.css';\n\nexport const App = () => {\n  const isLoggedOn = useSelector(getIsLoggedOn);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(getContacts()), [dispatch]);\n\n  const notLogedOnRender = () => {\n    return [<UserRegister />, <UserLogin />];\n  };\n  const logedOnRender = () => {\n    return [\n      <UserMenu />,\n      <ContactForm />,\n      <FilterContacts />,\n      <ContactsList />,\n    ];\n  };\n\n  return (\n    <div className={s.container}>\n      {/* {isLoggedOn ? logedOnRender() : notLogedOnRender()} */}\n      {logedOnRender()} {notLogedOnRender()}\n      {/* {isLoggedOn\n        ? ((<UserMenu />),\n          (<ContactForm />),\n          (<FilterContacts />),\n          (<ContactsList />))\n        : <UserRegister /> ?? <UserLogin />}\n\n      <h2 className={s.title}>Contact form</h2>\n\n      <h2 className={s.title}>Contact list</h2> */}\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/Store';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconsole.log(store.getState());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}